using System;
namespace UnrealEngine
{
	public partial class UPawnNoiseEmitterComponent:UActorComponent
	{
		/// <summary>
		/// Cache noises instigated by the owning pawn for AI sensing
		/// @param NoiseMaker - is the actual actor which made the noise
		/// @param Loudness - is the relative loudness of the noise (0.0 to 1.0)
		/// @param NoiseLocation - is the position of the noise
		/// </summary>
		public extern virtual void MakeNoise(AActor NoiseMaker,float Loudness,FVector NoiseLocation);
		/// <summary>
		/// If set to true (default value) will notify AIPerceptionSystem about noise events
		/// otherwise only PawnSensingComponents will be able to pick up noises generated by this component
		/// </summary>
		public bool bAIPerceptionSystemCompatibilityMode;
		
		/// <summary>Most recent noise made by this pawn not at its own location</summary>
		public FVector LastRemoteNoisePosition;
		
		/// <summary>After this amount of time, new sound events will overwrite previous sounds even if they are not louder (allows old sounds to decay)</summary>
		public float NoiseLifetime;
		
		/// <summary>Most recent volume of noise made by this pawn not at its own location</summary>
		public float LastRemoteNoiseVolume;
		
		/// <summary>Time of last remote noise update</summary>
		public float LastRemoteNoiseTime;
		
		/// <summary>Most recent noise made by this pawn at its own location</summary>
		public float LastLocalNoiseVolume;
		
		/// <summary>Time of last local noise update</summary>
		public float LastLocalNoiseTime;
		
		
	}
	
}
