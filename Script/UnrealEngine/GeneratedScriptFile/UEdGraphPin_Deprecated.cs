using System;
namespace UnrealEngine
{
	public partial class UEdGraphPin_Deprecated:UObject
	{
		/// <summary>Name of this pin</summary>
		public FString PinName;
		
		/// <summary>Used as the display name if set</summary>
		public FText PinFriendlyName;
		
		/// <summary>The tool-tip describing this pin's purpose</summary>
		public FString PinToolTip;
		
		/// <summary>Direction of flow of this pin (input or output)</summary>
		public EEdGraphPinDirection Direction;
		
		/// <summary>The type of information carried on this pin</summary>
		public FEdGraphPinType PinType;
		
		/// <summary>Default value for this pin (used if the pin has no connections), stored as a string</summary>
		public FString DefaultValue;
		
		/// <summary>Initial default value (the autogenerated value, to identify if the user has modified the value), stored as a string</summary>
		public FString AutogeneratedDefaultValue;
		
		/// <summary>If the default value for this pin should be an object, we store a pointer to it</summary>
		public UObject DefaultObject;
		
		/// <summary>If the default value for this pin should be an FText, it is stored here.</summary>
		public FText DefaultTextValue;
		
		/// <summary>The pin that was split and generated this pin</summary>
		public UEdGraphPin_Deprecated ParentPin;
		
		/// <summary>Pin that this pin uses for passing through reference connection</summary>
		public UEdGraphPin_Deprecated ReferencePassThroughConnection;
		
		/// <summary>If true, this connector is currently hidden.</summary>
		public bool bHidden;
		
		/// <summary>If true, this connector is unconnectable, and present only to allow the editing of the default text.</summary>
		public bool bNotConnectable;
		
		/// <summary>If true, the default value of this connector is fixed and cannot be modified by the user (it's visible for reference only)</summary>
		public bool bDefaultValueIsReadOnly;
		
		/// <summary>If true, the default value on this pin is ignored and should not be set</summary>
		public bool bDefaultValueIsIgnored;
		
		/// <summary>If true, this pin is the focus of a diff</summary>
		public bool bIsDiffing;
		
		/// <summary>If true, the pin may be hidden by user</summary>
		public bool bAdvancedView;
		
		/// <summary>If true, the pin is displayed as ref</summary>
		public bool bDisplayAsMutableRef;
		
		/// <summary>Pin name could be changed, so whenever possible it's good to have a persistent GUID identifying Pin to reconstruct Node seamlessly</summary>
		public FGuid PersistentGuid;
		
		
	}
	
}
